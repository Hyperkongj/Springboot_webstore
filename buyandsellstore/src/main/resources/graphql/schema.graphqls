type AddressOutput {
    type: String!
    street: String!
    city: String!
    state: String!
    zip: Int!
    country: String!
}

input Address {
    type: String
    street: String
    city: String
    state: String
    zip: Int
    country: String
}

type Order {
    id: ID!
    userId: ID!
    items: [CartItem!]!
    totalPrice: Float!
    createdAt: String!
}

input BookInput {
    title: String!
    author: String!
    price: Float!
    imageUrl: String!
    description: String!
    ratings: Float
    sellerId: String!
}

input PaymentInput {
    cardNumber: String!
    expiry: String!
    cvv: String!
}

input CartItemInput {
    itemId: ID!
    type: String
    name: String
    quantity: Int!
    price: Float!
    imageUrl: String!
}

input ReviewInput {
    reviewer: String!
    comment: String!
    rating: Float!
}

# Wishlist Functionality
type WishlistItem {
    id: ID!
    userId: ID!
    itemId: ID!
    type: String!
    name: String!
    imageUrl: String!
}

input WishlistItemInput {
    userId: ID!
    itemId: ID!
    type: String!
    name: String!
    imageUrl: String!
}

# Subscription support (optional)
type Subscription {
    wishlistItemAdded(userId: ID!): WishlistItem!
    wishlistItemUpdated(userId: ID!): WishlistItem!
    wishlistItemRemoved(userId: ID!): ResponseMessage!
}

type Query {
    hello: String
    cartItems(id: ID!): [CartItem]
    book(id: ID!): Book
    books: [Book!]!
    getOrdersByUserId(userId: ID!): [Order]
    wishlistItems(userId: ID!): [WishlistItem!]!
    wishlistItem(id: ID!): WishlistItem
    wishlistCount(userId: ID!): Int!
    getSellerStatistics(sellerId: ID!): SellerStats

}

type SellerStats {
    totalBuyers: Int
    totalPurchases: Int
    totalRevenue: Float
    purchasedBooks: [Book]
}

type Mutation {
    login(username: String!, password: String!): AuthResponse

    signup(
        username: String!
        email: String!
        password: String!
        firstName: String!
        lastName: String!
        phone: String!
        isSeller: Boolean!
        billing: [Address]
        shipping: [Address]
    ): AuthResponse

    addToCart(userId: ID!, itemId: ID!, type: String!): ResponseMessage!
    removeFromCart(userId: ID!, itemId: ID, type: String): ResponseMessage!

    createOrder(
        userId: ID!
        items: [CartItemInput!]!
        totalPrice: Float!
        billing: Address
        shipping: Address
        payment: PaymentInput!
    ): OrderResponse!

    addReview(bookId: ID!, review: ReviewInput!): Book!
    updateReview(bookId: ID!, reviewer: String!, updatedReview: ReviewInput!): Book!
    deleteReview(bookId: ID!, reviewer: String!): Book!

    addWishlistItem(input: WishlistItemInput!): WishlistItem!
    updateWishlistItem(input: WishlistItemInput!): WishlistItem!
    removeWishlistItem(id: ID!): ResponseMessage!

    forgotPassword(email: String!): String
    resetPassword(token: String!, newPassword: String!): ResetPasswordResponse!
    
    # Profile Page
    updateUser(
        id: ID!
        phone: String
        profilePictureUrl: String
        billing: [AddressInput]
        shipping: [AddressInput]
        primaryBillingIndex: Int
        primaryShippingIndex: Int
    ): User

    
    uploadBook(title: String!
        author: String!
        totalQuantity: Int!
        price: Float!
        imageUrl: String!
        description: String!
        sellerId: String!): Book

    uploadHomeItem(title: String!
        description: String!
        totalQuantity: Int!
        price: Float!
        imageUrl: String!
        manufacturer: String!
        sellerId: String!
        type: String!
    ): Book
}

type AuthResponse {
    success: Boolean!
    message: String!
    user: User
}

type ResetPasswordResponse {
    success: Boolean!
    message: String
}

type User {
  id: ID!
  username: String!
  email: String!
  phone: String
  firstName: String
  lastName: String
  isSeller: Boolean
  billing: [AddressOutput]
  shipping: [AddressOutput]
  primaryBillingIndex: Int
  primaryShippingIndex: Int
  profilePictureUrl: String
}
type Book {
    id: ID!
    title: String!
    author: String!
    price: Float!
    imageUrl: String!
    description: String
    ratings: Float!
    reviews: [Review!]
}

type CartItem {
    itemId: ID!
    type: String
    name: String
    quantity: Int
    price: Float
    imageUrl: String
}

type Review {
    reviewer: String!
    comment: String!
    rating: Float!
}

type ResponseMessage {
    success: Boolean!
    message: String!
}

type OrderResponse {
    success: Boolean!
    message: String!
    order: Order
    reviews: [Review!]
}

input AddressInput {
  type: String!        # e.g. "HOME", "WORK"
  street: String!
  city: String!
  state: String!
  zip: Int!
  country: String!
}

