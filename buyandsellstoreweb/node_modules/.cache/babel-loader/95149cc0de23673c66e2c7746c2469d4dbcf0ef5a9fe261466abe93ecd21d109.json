{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adv_soft_Eng\\\\project_1\\\\CS5394.Group3\\\\buyandsellstoreweb\\\\src\\\\screens\\\\ForgotPasswordScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORGOT_PASSWORD_MUTATION = gql`\n  mutation ForgotPassword($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [forgotPassword, {\n    loading\n  }] = useMutation(FORGOT_PASSWORD_MUTATION, {\n    onCompleted: data => {\n      if (data.forgotPassword) {\n        setSubmitted(true);\n      } else {\n        // Update error message if the email is not available.\n        setErrorMessage(\"No account associated with that email address.\");\n      }\n    },\n    onError: error => {\n      console.error(error);\n      setErrorMessage(\"An unexpected error occurred.\");\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    forgotPassword({\n      variables: {\n        email\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.successMessage,\n      children: \"An email has been sent to your email address with instructions to reset your password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        disabled: loading,\n        children: loading ? \"Sending...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.error,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"LvD2Epqq+0QAXSlm0VyzZmVatL8=\", false, function () {\n  return [useMutation];\n});\n_c = ForgotPassword;\nconst styles = {\n  container: {\n    maxWidth: \"400px\",\n    margin: \"50px auto\",\n    padding: \"20px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    textAlign: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    marginBottom: \"20px\",\n    color: \"#333\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\"\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"16px\",\n    color: \"#555\",\n    textAlign: \"left\"\n  },\n  input: {\n    padding: \"10px\",\n    fontSize: \"16px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    marginTop: \"5px\"\n  },\n  button: {\n    padding: \"10px\",\n    fontSize: \"16px\",\n    backgroundColor: \"#007BFF\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\"\n  },\n  error: {\n    marginTop: \"15px\",\n    color: \"red\",\n    fontWeight: \"bold\"\n  },\n  successMessage: {\n    color: \"#28a745\",\n    fontSize: \"16px\"\n  }\n};\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useMutation","gql","jsxDEV","_jsxDEV","FORGOT_PASSWORD_MUTATION","ForgotPassword","_s","email","setEmail","submitted","setSubmitted","errorMessage","setErrorMessage","forgotPassword","loading","onCompleted","data","onError","error","console","handleSubmit","e","preventDefault","variables","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","successMessage","onSubmit","form","label","type","value","onChange","target","required","input","button","disabled","_c","maxWidth","margin","padding","border","borderRadius","boxShadow","textAlign","backgroundColor","marginBottom","color","display","flexDirection","gap","fontSize","marginTop","cursor","fontWeight","$RefreshReg$"],"sources":["D:/Adv_soft_Eng/project_1/CS5394.Group3/buyandsellstoreweb/src/screens/ForgotPasswordScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\n\r\nconst FORGOT_PASSWORD_MUTATION = gql`\r\n  mutation ForgotPassword($email: String!) {\r\n    forgotPassword(email: $email)\r\n  }\r\n`;\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [forgotPassword, { loading }] = useMutation(FORGOT_PASSWORD_MUTATION, {\r\n    onCompleted: (data) => {\r\n      if (data.forgotPassword) {\r\n        setSubmitted(true);\r\n      } else {\r\n        // Update error message if the email is not available.\r\n        setErrorMessage(\"No account associated with that email address.\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(error);\r\n      setErrorMessage(\"An unexpected error occurred.\");\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    forgotPassword({ variables: { email } });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Forgot Password</h2>\r\n      {submitted ? (\r\n        <p style={styles.successMessage}>\r\n          An email has been sent to your email address with instructions to reset your password.\r\n        </p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit} style={styles.form}>\r\n          <label style={styles.label}>\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" style={styles.button} disabled={loading}>\r\n            {loading ? \"Sending...\" : \"Reset Password\"}\r\n          </button>\r\n        </form>\r\n      )}\r\n      {errorMessage && <p style={styles.error}>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"400px\",\r\n    margin: \"50px auto\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  title: {\r\n    marginBottom: \"20px\",\r\n    color: \"#333\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"15px\",\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    fontSize: \"16px\",\r\n    color: \"#555\",\r\n    textAlign: \"left\",\r\n  },\r\n  input: {\r\n    padding: \"10px\",\r\n    fontSize: \"16px\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    fontSize: \"16px\",\r\n    backgroundColor: \"#007BFF\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  error: {\r\n    marginTop: \"15px\",\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  successMessage: {\r\n    color: \"#28a745\",\r\n    fontSize: \"16px\",\r\n  },\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}