{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adv_soft_Eng\\\\project_1\\\\CS5394.Group3\\\\buyandsellstoreweb\\\\src\\\\screens\\\\ResetPasswordScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESET_PASSWORD_MUTATION = gql`\n  mutation ResetPassword($token: String!, $newPassword: String!) {\n    resetPassword(token: $token, newPassword: $newPassword) {\n      success\n      message\n    }\n  }\n`;\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [resetPassword, {\n    loading\n  }] = useMutation(RESET_PASSWORD_MUTATION, {\n    onCompleted: data => {\n      if (data.resetPassword.success) {\n        // Password reset was successful, redirect user to login page\n        navigate(\"/login\");\n      } else {\n        setErrorMessage(data.resetPassword.message);\n      }\n    },\n    onError: error => {\n      console.error(error);\n      setErrorMessage(\"An unexpected error occurred.\");\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validate that the two password fields match\n    if (newPassword !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    // Call the resetPassword mutation with the token and new password\n    resetPassword({\n      variables: {\n        token,\n        newPassword\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Confirm New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        disabled: loading,\n        children: loading ? \"Resetting...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.error,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"UWoGrYZ1CUbtARJ1rx4L11n7rq4=\", false, function () {\n  return [useSearchParams, useNavigate, useMutation];\n});\n_c = ResetPassword;\nconst styles = {\n  container: {\n    maxWidth: \"400px\",\n    margin: \"50px auto\",\n    padding: \"20px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n    textAlign: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    marginBottom: \"20px\",\n    color: \"#333\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\"\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"16px\",\n    color: \"#555\",\n    textAlign: \"left\"\n  },\n  input: {\n    padding: \"10px\",\n    fontSize: \"16px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    marginTop: \"5px\"\n  },\n  button: {\n    padding: \"10px\",\n    fontSize: \"16px\",\n    backgroundColor: \"#007BFF\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\"\n  },\n  error: {\n    marginTop: \"15px\",\n    color: \"red\",\n    fontWeight: \"bold\"\n  }\n};\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useMutation","gql","useSearchParams","useNavigate","jsxDEV","_jsxDEV","RESET_PASSWORD_MUTATION","ResetPassword","_s","searchParams","token","get","navigate","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","resetPassword","loading","onCompleted","data","success","message","onError","error","console","handleSubmit","e","preventDefault","variables","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","label","type","value","onChange","target","required","input","button","disabled","_c","maxWidth","margin","padding","border","borderRadius","boxShadow","textAlign","backgroundColor","marginBottom","color","display","flexDirection","gap","fontSize","marginTop","cursor","fontWeight","$RefreshReg$"],"sources":["D:/Adv_soft_Eng/project_1/CS5394.Group3/buyandsellstoreweb/src/screens/ResetPasswordScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst RESET_PASSWORD_MUTATION = gql`\r\n  mutation ResetPassword($token: String!, $newPassword: String!) {\r\n    resetPassword(token: $token, newPassword: $newPassword) {\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get(\"token\");\r\n  const navigate = useNavigate();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [resetPassword, { loading }] = useMutation(RESET_PASSWORD_MUTATION, {\r\n    onCompleted: (data) => {\r\n      if (data.resetPassword.success) {\r\n        // Password reset was successful, redirect user to login page\r\n        navigate(\"/login\");\r\n      } else {\r\n        setErrorMessage(data.resetPassword.message);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(error);\r\n      setErrorMessage(\"An unexpected error occurred.\");\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validate that the two password fields match\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n    // Call the resetPassword mutation with the token and new password\r\n    resetPassword({ variables: { token, newPassword } });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Reset Password</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <label style={styles.label}>\r\n          New Password:\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </label>\r\n        <label style={styles.label}>\r\n          Confirm New Password:\r\n          <input\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" style={styles.button} disabled={loading}>\r\n          {loading ? \"Resetting...\" : \"Reset Password\"}\r\n        </button>\r\n      </form>\r\n      {errorMessage && <p style={styles.error}>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"400px\",\r\n    margin: \"50px auto\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  title: {\r\n    marginBottom: \"20px\",\r\n    color: \"#333\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"15px\",\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    fontSize: \"16px\",\r\n    color: \"#555\",\r\n    textAlign: \"left\",\r\n  },\r\n  input: {\r\n    padding: \"10px\",\r\n    fontSize: \"16px\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    fontSize: \"16px\",\r\n    backgroundColor: \"#007BFF\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  error: {\r\n    marginTop: \"15px\",\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  },\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}